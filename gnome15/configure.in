AC_INIT(gnome15, 0.2.1)
AC_CONFIG_SRCDIR([src/main/python/gnome15/g15_applet.py])
AM_INIT_AUTOMAKE([tar-ustar])

dnl AM_CONFIG_HEADER(config.h)

AM_MAINTAINER_MODE

dnl AC_PATH_PROG(GCONFTOOL, gconftool-2)
dnl AM_GCONF_SOURCE_2
dnl AC_PROG_INTLTOOL([0.21])

dnl check for python
AM_PATH_PYTHON

dnl AC_ARG_ENABLE([indicator],
dnl 			[  --enable-indicator	Enable Panel Indicator support],
dnl 			[case "${enableval}" in
dnl 				yes)	indicator=true ;;
dnl 				no)		indicator=false ;;
dnl 				*)		AC_MSG_ERROR([bad value ${enableval} for --enable-indicator]) ;;
dnl 			esac],[debug=false])
dnl AM_CONDITIONAL([INDICATOR],	[test x$indicator = xtrue])

dnl AC_ARG_ENABLE([applet],
dnl 			[  --enable-applet	Enable Panel Applet support],
dnl 			[case "${enableval}" in
dnl 				yes)	applet=true ;;
dnl 			m	no)		applet=false ;;
dnl 				*)		AC_MSG_ERROR([bad value ${enableval} for --enable-applet]) ;;
dnl 			esac],[debug=false])
dnl AM_CONDITIONAL([APPLET],	[test x$applet = xtrue])

dnl Dependencies for core applet and tools

AX_PYTHON_MODULE(gnomeapplet, [])

AX_PYTHON_MODULE(appindicator, [])
AS_IF([test "x${HAVE_PYMOD_APPINDICATOR}" = "xyes"],
     [appindicator=yes],
     [test "x${HAVE_PYMOD_GNOMEAPPLET}" = "xyes"],
     [gnomeapplet=yes])
     
AM_CONDITIONAL([APPLET], test x$gnomeapplet = xyes)
AM_CONDITIONAL([INDICATOR],	test x$appindicator = xyes)

AS_IF([test "x${HAVE_PYMOD_GNOMEAPPLET}" = "xno" -a "x${HAVE_PYMOD_APPINDICATOR}" = "xno"],
     [AC_MSG_ERROR([Requires Python Application Indicator OR Python Gnome Applet Library])])

AX_PYTHON_MODULE(Image, [])
AS_IF([test "x${HAVE_PYMOD_IMAGE}" = "xno"],
     [AC_MSG_ERROR([Requires Python Image Library])])
     
AX_PYTHON_MODULE(cairo, [])
AS_IF([test "x${HAVE_PYMOD_CAIRO}" = "xno"],
     [AC_MSG_ERROR([Requires Python bindings for the Cairo vector graphics library])])
          
AX_PYTHON_MODULE(gtk, [])
AS_IF([test "x${HAVE_PYMOD_GTK}" = "xno"],
     [AC_MSG_ERROR([Requires PyGTK, the GTK bindings for Python])])

AX_PYTHON_MODULE(dbus, [])
AS_IF([test "x${HAVE_PYMOD_DBUS}" = "xno"],
     [AC_MSG_ERROR([Requires DBUS bindings for Python])])
     
AX_PYTHON_MODULE(lxml, [])
AS_IF([test "x${HAVE_PYMOD_LXML}" = "xno"],
     [AC_MSG_ERROR([Requires LXML bindings for Python])])
     
AX_PYTHON_MODULE(gobject, [])
AS_IF([test "x${HAVE_PYMOD_GOBJECT}" = "xno"],
     [AC_MSG_ERROR([Requires GObject for Python])])
     
AX_PYTHON_MODULE(rsvg, [])
AS_IF([test "x${HAVE_PYMOD_RSVG}" = "xno"],
     [AC_MSG_ERROR([Requires RSVG for Python])])

AX_PYTHON_MODULE(pango, [])
AS_IF([test "x${HAVE_PYMOD_PANGO}" = "xno"],
     [AC_MSG_ERROR([Requires Pango for Python])])
     
dnl AX_PYTHON_MODULE(gnomeapplet, [])
dnl AS_IF([test "x${HAVE_PYMOD_GNOMEAPPLET}" = "xno"],
dnl     [AC_MSG_ERROR([Requires GNOME bindings for Python (part of PyGTK)])])
     
AX_PYTHON_MODULE(xdg, [])
AS_IF([test "x${HAVE_PYMOD_XDG}" = "xno"],
     [AC_MSG_ERROR([Requires PyXDG - Python Freedesktop Library])])     
     
AX_PYTHON_MODULE(Xlib, [])
AS_IF([test "x${HAVE_PYMOD_XLIB}" = "xno"],
     [AC_MSG_ERROR([Requires Python Xlib - Python Xlib bindings])])

AX_PYTHON_MODULE(setproctitle, [])
AS_IF([test "x${HAVE_PYMOD_SETPROCTITLE}" = "xno"],
     [AC_MSG_WARN([It is recommend that setproctitle is installed])])
     
     
AX_PYTHON_MODULE(appindicator, [])

dnl Dependencies for plugins
 
AX_PYTHON_MODULE(alsaaudio, [])
AS_IF([test "x${HAVE_PYMOD_ALSAAUDIO}" = "xno"],
     [AC_MSG_ERROR([Requires Alsa bindings for Python])])

AX_PYTHON_MODULE(vobject, [])
AS_IF([test "x${HAVE_PYMOD_VOBJECT}" = "xno"],
     [AC_MSG_ERROR([Requires Python vObject])])

AX_PYTHON_MODULE(feedparser, [])
AS_IF([test "x${HAVE_PYMOD_FEEDPARSER}" = "xno"],
     [AC_MSG_ERROR([Requires Universal Feed Parser for Python])])

AX_PYTHON_MODULE(evolution, [])
AS_IF([test "x${HAVE_PYMOD_EVOLUTION}" = "xno"],
     [AC_MSG_ERROR([Requires Evolution Bindings for Python])])

     
PKG_CHECK_MODULES(PYGTK, pygtk-2.0)
AC_SUBST(PYGTK_CFLAGS)
AC_SUBST(PYGTK_LIBS)

dnl ALL_LINGUAS="es ja pl pt sr sr@Latn sv it"
                                                                                
dnl GETTEXT_PACKAGE=gnome-blog
dnl AC_SUBST(GETTEXT_PACKAGE)
dnl AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [The gettext package])

dnl AM_GLIB_GNU_GETTEXT

AC_OUTPUT([
Makefile
src/Makefile
src/scripts/Makefile
src/plugins/Makefile
src/plugins/background/Makefile
src/plugins/cairo-clock/Makefile
src/plugins/cal/Makefile
src/plugins/cal/default/Makefile
src/plugins/clock/Makefile
src/plugins/clock/default/Makefile
src/plugins/fx/Makefile
src/plugins/indicator-me/Makefile
src/plugins/indicator-messages/Makefile
src/plugins/indicator-me/default/Makefile
src/plugins/macro-recorder/Makefile
src/plugins/macro-recorder/default/Makefile
src/plugins/macros/Makefile
src/plugins/macros/default/Makefile
src/plugins/mpris/Makefile
src/plugins/mpris/default/Makefile
src/plugins/menu/Makefile
src/plugins/panel/Makefile
src/plugins/notify-lcd/Makefile
src/plugins/notify-lcd/default/Makefile
src/plugins/screensaver/Makefile
src/plugins/screensaver/default/Makefile
src/plugins/sysmon/Makefile
src/plugins/sysmon/default/Makefile
src/plugins/rss/Makefile
src/plugins/rss/default/Makefile
src/plugins/sysmon/dials/Makefile
src/plugins/volume/Makefile
src/plugins/volume/default/Makefile
src/plugins/weather/Makefile
src/plugins/weather/default/Makefile
src/themes/Makefile
src/themes/default/Makefile
src/gnome/Makefile
src/gnome/applications/Makefile
src/gnome/applications/g15-config.desktop
src/gnome/applications/g15-macros.desktop
src/gnome/servers/Makefile
src/gnome/servers/GNOME_G15Applet.server
src/gnome/autostart/Makefile
src/gnome/autostart/gnome15.desktop
src/main/Makefile
src/main/python/Makefile
src/main/python/gnome15/Makefile
src/main/python/gnome15/g15_globals.py
src/main/python/gnome15/drivers/Makefile
src/main/resources/Makefile
src/main/resources/icons/Makefile
src/main/resources/icons/elementary/Makefile
src/main/resources/icons/elementary/status/Makefile
src/main/resources/icons/elementary/status/16/Makefile
src/main/resources/icons/elementary/status/22/Makefile
src/main/resources/icons/elementary/status/24/Makefile
src/main/resources/icons/hicolor/Makefile
src/main/resources/icons/hicolor/16x16/Makefile
src/main/resources/icons/hicolor/16x16/status/Makefile
src/main/resources/icons/hicolor/22x22/Makefile
src/main/resources/icons/hicolor/22x22/apps/Makefile
src/main/resources/icons/hicolor/22x22/status/Makefile
src/main/resources/icons/hicolor/24x24/Makefile
src/main/resources/icons/hicolor/24x24/apps/Makefile
src/main/resources/icons/hicolor/24x24/status/Makefile
src/main/resources/icons/hicolor/48x48/Makefile
src/main/resources/icons/hicolor/48x48/apps/Makefile
src/main/resources/icons/hicolor/64x64/Makefile
src/main/resources/icons/hicolor/64x64/apps/Makefile
src/main/resources/icons/hicolor/scalable/Makefile
src/main/resources/icons/hicolor/scalable/apps/Makefile
src/main/resources/icons/hicolor/scalable/status/Makefile
src/main/resources/icons/ubuntu-mono-dark/Makefile
src/main/resources/icons/ubuntu-mono-dark/status/Makefile
src/main/resources/icons/ubuntu-mono-dark/status/16/Makefile
src/main/resources/icons/ubuntu-mono-dark/status/22/Makefile
src/main/resources/icons/ubuntu-mono-dark/status/24/Makefile
src/main/resources/icons/ubuntu-mono-light/Makefile
src/main/resources/icons/ubuntu-mono-light/status/Makefile
src/main/resources/icons/ubuntu-mono-light/status/16/Makefile
src/main/resources/icons/ubuntu-mono-light/status/22/Makefile
src/main/resources/icons/ubuntu-mono-light/status/24/Makefile
src/main/resources/images/Makefile
src/main/resources/glade/Makefile
src/man/Makefile
])
